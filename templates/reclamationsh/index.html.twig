{% extends 'base.html.twig' %}

{% block title %}
  Show Reclamation!
{% endblock %}

{% block body %}
  <!-- Start Blog Area -->
  <div class="rn-blog-area rn-section-gapTop">
    <div class="container">
      <div class="row mb--50 align-items-center">
        <div class="col-lg-6 col-md-6 col-sm-6 col-12">
          <h5>Here you can find all your reclamation. Hope you find it helpful!</h5>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-6 col-12 text-right">
          <!-- Filter Buttons -->
          <button id="filter-all" class="btn btn-info">All</button>
          <button id="filter-responded" class="btn btn-success">Responded</button>
          <button id="filter-pending" class="btn btn-warning">Pending</button>
        </div>
      </div>
      {% for message in app.flashes('success') %}
        <div class="alert alert-success">
          {{ message }}
        </div>
      {% endfor %}
      <div class="row g-5 d-flex flex-wrap">
        {% for recll in recc %}
          <div class="inner flex-grow-1" style="max-width: 300px; overflow-wrap: break-word;" data-status="{{ recll.reponse ? 'responded' : 'pending' }}">
            <div class="thumbnail">
              <a href="{{ path('reclamationsh.modifer', { id: recll.id }) }}">
                <img src="{{ asset('images/reclamation/' ~ recll.getImagePath()) }}" alt="Reclamation Image" />
                <span class="text-center color-white"><i class="feather-edit"></i></span>
              </a>
            </div>
            <div class="content">
              <div class="category-info">
                <div class="category-list">
                  <a href="javascript:void(0);" class="reclamation-subject" data-id="{{ recll.id }}">
                    {{ recll.subject }}
                    <span class="badge {{ recll.reponse ? 'badge-success' : 'badge-warning' }}">
                      {{ recll.reponse ? 'Responded' : 'Pending' }}
                    </span>
                  </a>
                </div>
                <div class="meta">
                  <span><i class="feather-clock"></i> {{ recll.createdAt|date('Y-m-d\TH:i:sP')|time_ago }}</span>
                </div>
              </div>
              <h4 class="title">
                {% if (recll.description|length) > 10 %}
                  {{ recll.description|slice(0, 10) }}...
                {% else %}
                  {{ recll.description }}
                {% endif %}
                <button class="btn btn-danger delete-reclamation" data-id="{{ recll.id }}">Delete</button>
              </h4>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const deleteButtons = document.querySelectorAll('.delete-reclamation');
      const filterAll = document.getElementById('filter-all');
      const filterResponded = document.getElementById('filter-responded');
      const filterPending = document.getElementById('filter-pending');
      const reclamationItems = document.querySelectorAll('.inner');
    
      // Delete functionality
      deleteButtons.forEach(function (button) {
        button.addEventListener('click', function (e) {
          e.preventDefault();
          const reclamationId = this.getAttribute('data-id');
    
          if (confirm('Are you sure?')) {
            fetch(`{{ path('reclamationsh.del', {'id': 'ID_PLACEHOLDER'}) }}`.replace('ID_PLACEHOLDER', reclamationId), {
              method: 'POST',
              // Include any necessary headers, CSRF tokens, etc.
            }).then(response => {
              if (response.ok) {
                document.getElementById(`reclamation-${reclamationId}`).remove();
              } else {
                window.location.reload();
              }
            }).catch(error => console.error('Error:', error));
          }
        });
      });
    
      // Modal functionality
      const subjectLinks = document.querySelectorAll('.reclamation-subject');
      subjectLinks.forEach(link => {
        link.addEventListener('click', function () {
          const id = this.getAttribute('data-id');
          // Fetch reclamation details using the ID
          fetch(`/reclamation/details/${id}`)
            .then(response => response.json())
            .then(data => {
              document.getElementById('modalReclamationImage').src = `{{ asset('images/reclamation/') }}${data.imagePath}`;
              const modalTitle = document.getElementById('reclamationModalLabel');
              modalTitle.textContent = data.subject;
              document.getElementById('modalReclamationDate').textContent = new Date(data.createdAt).toLocaleString();
              document.getElementById('modalReclamationDescription').textContent = data.description;
              document.getElementById('modalReclamationResponse').textContent = data.response ? data.response : 'Pending';
              new bootstrap.Modal(document.getElementById('reclamationModal')).show();
            })
            .catch(error => {
              console.error('Error:', error);
              alert('An error occurred while fetching the reclamation details.');
            });
        });
      });
    
      // Filter functionality
      function filterReclamations(filter) {
        reclamationItems.forEach(item => {
          const status = item.getAttribute('data-status');
          if (filter === 'all' || status === filter) {
            item.style.display = '';
          } else {
            item.style.display = 'none';
          }
        });
      }
    
      filterAll.addEventListener('click', () => filterReclamations('all'));
      filterResponded.addEventListener('click', () => filterReclamations('responded'));
      filterPending.addEventListener('click', () => filterReclamations('pending'));
    });
    </script>
    
  
  
  <style>
    .modal-content {
      background-color: #2c3034; /* Dark background */
      color: #ffffff; /* White text */
      border: none;
    }

    .modal-header {
      border-bottom: none;
    }

    .modal-footer {
      border-top: none;
    }

    .btn-close {
      filter: invert(1); /* Make the close button white */
    }

    /* Match the font styles from your site */
    .modal-title, .modal-body, .modal-footer {
      font-family: 'Your Font Family', sans-serif;
      /* Your font styles here */
    }
  </style>
{% endblock %}
